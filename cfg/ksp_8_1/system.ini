#############################################################################
# This file is part of the vscode-ksp-compiler distribution
# (https://github.com/moosefriend/vscode-ksp-compiler).
#
# Copyright (c) 2024 MooseFriend (https://github.com/moosefriend)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
##############################################################################
# Configuration file for parsing Kontakt KSP Reference Manual
[General]
###############################################################################
# General Settings
###############################################################################
# Version of Kontakt where "." is replaced with "_"
kontakt_version = 8_1

# Root directory relative to the directory of this file
root_dir = ../..


###############################################################################
# Log Settings
###############################################################################
# Directory to write log files
# Leave this empty if no log files shall be written
log_dir = ${root_dir}/logs/ksp_${kontakt_version}

# Log level
log_level_console = INFO
log_level_file    = DEBUG

# Log format
log_format_console = %(message)s
log_format_file    = [%(asctime)s.%(msecs)03d] [%(levelname)-8s] %(message)s

# Log date format
log_date_format_console = %Y-%m-%d %H:%M:%S
log_date_format_file    = %Y-%m-%d %H:%M:%S


###############################################################################
# PDF Converter Settings
###############################################################################
# Directory where the *.pdf files are located
pdf_dir = ${root_dir}/doc_parser/pdf

# Path to the Kontakt KSP Reference Manual in PDF Format relative to this file
pdf_file = ${pdf_dir}/KSP_Reference_${kontakt_version}_Manual_en.pdf

# Directory for the text files (original and fixed) of the converted PDF relative to the directory of this file
txt_dir = ${root_dir}/doc_parser/txt/ksp_${kontakt_version}

# Original text file which is the output of the conversion of the PDF file
txt_file_original = ${txt_dir}/KSP_Reference_Manual_Original.txt.py

# Fixed text file which is initial a copy of the original text file,
# but manually fixed by the user to fix parsing problems
txt_file_fixed = ${txt_dir}/KSP_Reference_Manual_Fixed.txt.py


###############################################################################
# Generic Parser Settings
###############################################################################
# The page number is decreased by this offset, e.g. if the page numbers start again with 1 after the table of contents
page_offset = 9

# Number of lines to skip from the beginning of each page (only for non table of content pages).
# This is needed to skip the header which is in the exported text in the beginning of the page.
page_header_lines = 2

# Dump the parsed content
dump = false

# Dump also the parsed text
verbose = false

# Phases for the parser
# Comment phases out to skip that phase
phases =
    callbacks
    widgets
    functions
    commands
    variables


###############################################################################
# Parser Export Files
###############################################################################
# Directory for the exported *.csv files relative to the directory of this file
csv_dir = ${root_dir}/doc_parser/csv/ksp_${kontakt_version}

# Delimiter for the exported *.csv files
delimiter = ,

# Callbacks export *.csv file
callbacks_csv = ${csv_dir}/built_in_callbacks.csv

# Widgets export *.csv file
widgets_csv = ${csv_dir}/built_in_widgets.csv

# Functions export *.csv file
functions_csv = ${csv_dir}/built_in_functions.csv

# Commands export *.csv file
commands_csv = ${csv_dir}/built_in_commands.csv

# Variables export *.csv file
variables_csv = ${csv_dir}/built_in_variables.csv


###############################################################################
# Parser Start/Stop Patterns
#
# Each line of the text file will be checked against the start pattern.
# Once the start pattern matches the corresponding section is parsed for items
# (e.g. callbacks) until a line matches the stop pattern.
# Since multiple sections could be parsed, for each section specify the start
# and stop pattern in a separate line.
#
# Notes:
# - Each start and stop pattern must be in a separate line
# - Each line must be indented by 4 spaces
# - $ in a pattern must replaced with $$, because this is used for references
# - The start and stop pattern must be separated by " ==> "
#
# Example:
# callbacks_content_patterns =
#     ^(\d+\.\s+)?Callbacks$$ ==> ^(\d+\.\s+)?Variables$$
###############################################################################
# Start and stop pattens for finding callbacks
callbacks_content_patterns =
    ^(\d+\.\s+)?Callbacks$$ ==> ^(\d+\.\s+)?Variables$$

# Start and stop pattens for finding widgets
widgets_content_patterns =
    ^(\d+\.\s+)?User Interface Widgets$$ ==> ^(\d+\.\s+)?General Commands$$

# Start and stop pattens for finding functions
functions_content_patterns =
    ^(\d+\.\s+)?Arithmetic Commands & Operators$$ ==> ^(\d+\.\s+)?Control Statements$$

# Start and stop pattens for finding commands
commands_content_patterns =
    ^(\d+\.\s+)?Variables$$ ==> ^(\d+\.\s+)?Built-in Variables and Constants$$

# Start and stop pattens for finding variables
variables_content_patterns =
    ^(\d+\.\s+)?Built-in Variables and Constants$$ ==> ^(\d+\.\s+)?Advanced Concepts$$


###############################################################################
# VS Code Generator Settings
###############################################################################
# Directory of the VS Code extension
vs_code_extension_dir = ${root_dir}/vscode_extension

# Directory for generated files
out_dir = ${vs_code_extension_dir}/out

# Directory for generated json files
json_dir = ${out_dir}/json

# Directory for generated typescript files
ts_dir = ${vs_code_extension_dir}/src/generated

# Directory of the syntax files
syntax_dir = ${vs_code_extension_dir}/syntaxes

# Directory for snippet files
snippet_dir = ${vs_code_extension_dir}/snippets

# Language configuration YAML file which will be automatically converted to a JSON file
lang_config_yml = ${vs_code_extension_dir}/language-configuration.yml
lang_config_json = ${json_dir}/language-configuration.json

# Sublime Text syntax YAML file which will be automatically converted to TextMate JSON file
sublime_syntax_yml = ${root_dir}/sublime_ksp/KSP.sublime-syntax
text_mate_yml = ${syntax_dir}/ksp.tmGrammar_sublime.yml
text_mate_json = ${json_dir}/ksp.tmGrammar_sublime.json

# TextMate grammar YAML file which will be automatically converted to a JSON file
grammar_yml = ${syntax_dir}/ksp.tmGrammar.yml
grammar_json = ${json_dir}/ksp.tmGrammar.json

# Snippets YAML file which will be automatically converted to a JSON file
snippets_yml = ${snippet_dir}/ksp.snippets.yml
snippets_json = ${json_dir}/ksp.snippets.json

# Type script files which are generated
variable_names_ts = ${ts_dir}/variableNames.ts
variable_completion_ts = ${ts_dir}/variableCompletion.ts
command_names_ts = ${ts_dir}/commandNames.ts
command_completion_ts = ${ts_dir}/commandCompletion.ts
